use std::error::Error;

use esp_idf_svc::hal::{adc::{attenuation, config::Config, AdcChannelDriver, AdcDriver}, delay::FreeRtos, peripherals::Peripherals};
use esp_idf_unda::network::{activations::Activations, network::Network};

fn main() -> Result<(), Box<dyn Error>> {
    // It is necessary to call this function once. Otherwise some patches to the runtime
    // implemented by esp-idf-sys might not link properly. See https://github.com/esp-rs/esp-idf-template/issues/71
    esp_idf_svc::sys::link_patches();

    // Bind the log crate to the ESP Logging facilities
    esp_idf_svc::log::EspLogger::initialize_default();

    let peripherals = Peripherals::take()?;

    let mut adc = AdcDriver::new(peripherals.adc1, &Config::new().calibration(true))?;
    let mut water_sensor: AdcChannelDriver<{attenuation::DB_11}, _> = AdcChannelDriver::new(peripherals.pins.gpio4)?;
    let mut light_sensor: AdcChannelDriver<{attenuation::DB_11}, _> = AdcChannelDriver::new(peripherals.pins.gpio5)?;




    let water_model_str = "D|8|3|0.3827973 -0.39539668 0.5388387 -0.4048307 -0.44851846 -0.14013124 0.8265887 -0.6149081 0.37992418 -0.12908308 0.50875545 -0.2579141 -0.1387539 0.5392833 0.12767614 0.8222494 0.44627318 0.6513768 -0.3437115 0.03029629 0.40559125 -0.24249803 -0.5327805 -0.26812124|0.21463752 0.98966146 0.9752579 -0.28065205 -0.33835816 -0.4618194 0.2892959 -0.052179337#D|32|8|1409.0732 2128.6396 1871.308 -8850.278 -7698.122 -593.2377 73.741005 -0.50693965 1699.6635 2734.3376 2368.6418 -11800.675 -10887.674 -1059.3862 -189.30684 0.31309673 1400.2034 2136.2266 1866.3309 -8846.088 -7694.1724 -597.2256 62.227886 0.20392999 -1807.9059 -3421.8923 -2603.805 12843.384 11909.6 1176.3008 316.4558 -0.07803893 1360.1826 2119.8823 1827.8728 -8825.778 -7752.6196 -648.45636 28.07753 0.041099805 -547.70807 -1039.3073 -741.13245 3592.3772 2682.9229 187.55316 -85.70701 0.21406582 1376.6909 2153.1738 1834.2708 -9007.913 -8196.941 -747.1474 -9.787219 0.036208853 -658.2326 -849.9826 -803.2369 2866.8677 2962.6038 132.5088 -103.007774 -0.34467104 1772.5804 2450.0586 2343.2004 -11665.672 -10420.61 -904.5177 -97.26383 0.036738876 -1069.1135 -2174.9497 -1505.1049 7209.4795 6465.6084 602.8323 32.867046 0.29000732 -827.9555 -1319.6892 -997.2883 4453.817 3379.645 140.4029 -217.59763 0.561071 1429.1888 2215.859 1914.1769 -8861.645 -7759.948 -584.6222 77.80342 -0.1716325 1427.2223 2304.161 1933.1592 -9076.615 -7971.535 -633.18304 43.25911 0.28522688 1431.2606 2150.3325 1922.4908 -9202.597 -8168.898 -674.14954 1.5480773 -0.39074057 1685.8529 2800.472 2378.5693 -12174.3545 -11153.218 -1119.73 -280.93756 0.27287528 -1683.9697 -3508.6768 -2461.1968 12030.182 11395.484 1169.9873 323.59747 0.2916318 1697.8241 3017.033 2409.773 -12334.773 -11481.452 -1196.9681 -298.97873 0.065297425 -1846.7249 -2584.786 -2417.1208 10851.174 9699.742 681.3206 -80.18509 -0.16907533 1351.2573 2151.97 1821.3206 -8782.71 -7715.1035 -643.6118 25.818449 0.54067516 1415.788 2170.474 1911.4971 -9005.803 -7976.923 -638.91864 31.539774 0.31681615 1680.9115 2754.4832 2336.937 -11696.865 -10704.82 -1036.3807 -189.323 -0.2064912 1479.2593 2183.1458 1957.3264 -9113.314 -8007.719 -606.89166 83.74578 -0.09712207 1425.2415 2070.9863 1872.9622 -8819.814 -7753.6455 -595.46796 71.74658 -0.10536752 -1451.5435 -2015.1514 -1805.5242 7665.7725 6749.9844 370.57004 -256.8141 -0.27860674 1495.0059 2155.1704 1956.0719 -9177.188 -8263.753 -663.95917 58.70301 0.098887436 1414.6638 2125.9297 1878.1272 -8871.842 -7727.673 -593.72217 71.36735 -0.19101995 1419.0452 2125.118 1883.7184 -8831.248 -7734.6807 -594.16754 78.694534 0.073916234 1282.9343 2143.9404 1751.5507 -8822.417 -7785.2563 -721.1659 -36.030716 -0.11912256 -1954.8032 -2624.961 -2546.3225 11308.973 10027.889 670.2849 -119.13653 -0.07471602 1464.2031 2266.6858 1973.3241 -9217.942 -8025.9375 -612.1239 55.54601 0.1725888 -1205.5754 -2171.7368 -1626.1309 7978.729 6987.98 617.89526 16.635735 0.059376504 -1817.6284 -3475.5308 -2595.2463 12828.57 11934.951 1188.4873 297.9469 0.5613903|-551.88385 -1002.0873 -555.9096 1012.0985 -578.9851 24.511564 -745.47925 309.17493 -1187.7642 338.13107 223.82884 -499.84644 -513.65265 -673.25494 -1112.7023 899.1264 -1127.1051 846.4543 -561.60175 -563.1056 -1008.97156 -595.6086 -636.9458 510.86685 -743.3357 -566.10693 -555.22253 -621.6585 857.93396 -530.4238 567.69995 1047.6976#D|16|32|-9077.551 -9292.705 -9219.053 11573.319 -10075.731 -1500.2284 -12960.589 -69.361755 -9224.119 11.951587 -121.29025 -9709.521 -9058.205 -10716.405 -7405.585 8566.914 -6926.2207 1.5471973 -10166.342 -9492.584 -9476.828 -9184.174 -10690.6045 -110.117966 -9831.209 -9075.287 -8877.343 -12739.333 -0.5565438 -9206.783 2.70943 11029.635 -7112.8745 -17697.902 -7191.346 18330.135 -8059.2925 -593.64026 -11289.324 85.72746 -15987.772 40.643208 -147.71127 -7640.963 -7541.044 -9093.513 -21392.752 18322.791 -21147.36 -8.9456005 -8052.8145 -7792.923 -17785.223 -7756.754 -8214.72 -18.745924 -8702.775 -7171.5264 -6974.2734 -10756.3 1.6295582 -7792.905 49.387352 17811.574 -7429.0273 -18683.947 -7516.8037 14369.237 -8357.113 1374.4878 -11534.199 13.03529 -13836.333 43.954193 -12.035233 -8313.28 -7862.184 -9537.105 -21377.137 17371.945 -21619.822 3.9935374 -8320.257 -8278.39 -18286.186 -8223.186 -8839.057 80.34974 -9090.666 -7472.524 -7384.6187 -11010.064 -0.04081635 -8145.3857 28.838564 15503.825 -8356.362 -18607.758 -8493.537 14434.655 -9280.048 -916.6053 -12739.586 -71.82052 -14481.613 12.481048 -0.1925515 -9333.404 -8891.979 -10708.711 -21352.084 16551.164 -21501.096 7.385869 -9265.197 -9223.724 -18265.049 -9186.057 -10169.415 3.3389242 -10078.44 -8410.377 -8347.985 -11921.391 11.749775 -9174.382 -12.271398 14955.838 -7389.0693 -18814.805 -7453.3125 15146.444 -8309.012 70.457146 -11479.884 0.4696769 -15407.924 36.18123 -82.73069 -7872.1616 -7849.1895 -8906.165 -21175.709 17668.236 -21643.656 3.543386 -8202.507 -8180.035 -18254.383 -8108.122 -8414.279 -38.046524 -8958.796 -7421.2705 -7390.636 -11012.404 4.085354 -7904.3667 36.59477 16032.126 -6776.6445 -18746.934 -6915.561 15779.046 -7736.747 -93.51756 -10965.287 -81.18366 -15594.063 15.087323 196.91971 -7226.8354 -7345.4683 -9049.563 -21401.578 17341.291 -21704.588 7.84001 -7681.588 -7651.455 -18274.115 -7541.153 -8044.2896 32.448967 -8651.34 -6905.687 -6706.2944 -10423.004 10.43487 -7505.4453 53.398254 16506.314 -6475.0854 -17758.813 -6573.7183 17653.477 -7523.6533 1845.4971 -10598.075 21.783236 -14051.354 119.12637 -37.247604 -6906.6616 -7151.7065 -8423.247 -20080.514 18385.064 -19782.656 5.878645 -7465.925 -7404.74 -17722.15 -7145.545 -7432.7188 2.845316 -8104.0996 -6549.2656 -6418.843 -10225.755 12.678202 -7179.129 47.021576 17649.62 -8233.411 -18763.105 -8371.807 15251.414 -9204.554 -1750.1649 -12699.04 -31.324455 -17434.004 8.581294 280.4252 -9082.303 -8757.567 -10538.378 -21391.734 15862.065 -21833.475 1.1297152 -9144.886 -9224.602 -18382.813 -9170.719 -9878.425 59.081017 -10077.853 -8300.945 -8268.676 -11848.354 -2.2475736 -9160.409 -10.581172 15587.661 -7678.3447 -18622.207 -7865.654 14915.892 -8564.2295 579.13574 -11797.154 32.75449 -14103.366 36.87237 -4.4595847 -8414.723 -8194.301 -9954.485 -21394.227 16523.375 -21545.047 -2.8094745 -8532.315 -8449.387 -18241.313 -8470.69 -9226.626 -20.752127 -9447.697 -7766.319 -7635.376 -11216.225 -4.9702296 -8336.138 -9.38999 15123.297 -6924.045 -18613.47 -6998.1323 17446.041 -7810.6553 239.68045 -10852.351 82.27695 -15897.535 24.782492 107.83059 -7457.75 -7463.421 -9060.182 -21491.383 17666.371 -21459.818 4.999851 -7731.194 -7743.666 -18461.629 -7792.8584 -8045.372 69.877686 -8693.065 -6993.187 -6891.753 -10503.992 13.135436 -7649.3394 50.64579 17181.068 -7315.5015 -18428.014 -7439.5083 18110.236 -8313.376 -562.0942 -11568.212 21.022858 -14750.748 39.975395 -120.197495 -7842.293 -7763.9546 -9422.338 -21545.229 18451.854 -21301.041 11.30661 -8287.409 -8093.87 -18287.592 -7953.957 -8525.116 -56.126583 -8998.277 -7412.197 -7132.1885 -10978.437 5.6950545 -7962.9536 50.164696 17691.379 -7475.54 -18178.902 -7574.497 15011.115 -8363.764 1514.0254 -10984.361 -36.538822 -12132.76 50.243168 -188.35127 -7974.945 -7761.2275 -8302.937 -21231.719 17751.545 -21480.68 -24.482286 -8336.679 -8222.332 -17892.611 -7930.372 -8182.7925 -117.971146 -8560.491 -7472.759 -7441.7637 -11052.618 -20.404554 -7964.6274 18.933748 15697.674 -7016.1064 -18581.717 -7096.813 17321.076 -7953.5786 363.03763 -11018.727 80.89961 -15618.573 43.192665 81.81125 -7649.737 -7585.6235 -9102.722 -21458.34 17675.45 -21487.773 3.9947708 -7866.785 -7894.566 -18390.984 -7787.401 -8164.735 47.780144 -8860.073 -7072.4775 -7058.4326 -10639.991 7.7791133 -7811.635 50.15663 17097.063 -7326.625 -18756.22 -7439.0146 15892.163 -8292.478 115.08604 -11495.808 -16.966738 -15234.868 44.307915 -51.62886 -8129.041 -7824.703 -9458.238 -21253.531 16982.82 -21510.81 -5.022293 -8264.051 -8180.749 -18256.193 -8079.2954 -8811.183 -70.89391 -9025.79 -7393.166 -7307.953 -10931.052 -6.609633 -8092.572 14.925729 15867.698 -8501.235 -18217.418 -8637.135 16232.701 -9362.387 -917.6892 -12746.999 -58.628056 -13681.021 8.746423 -170.98914 -9278.155 -8770.493 -10702.271 -21264.697 17648.904 -21273.314 3.739264 -9406.979 -9195.125 -17869.42 -9065.598 -10148.78 -78.28731 -10031.856 -8570.32 -8241.539 -12009.67 5.624503 -9048.002 48.878017 16038.8 -6880.091 -17543.53 -6990.8413 18476.754 -7933.462 -257.9899 -11248.835 81.55298 -15388.564 42.002953 -183.75432 -7376.5557 -7440.2134 -8969.75 -21133.15 19196.555 -20820.977 19.744278 -7898.372 -7706.3594 -17568.287 -7545.1304 -8065.395 -33.463955 -8528.809 -6946.3076 -6819.1934 -10651.043 22.530888 -7578.266 106.02622 18445.395|-346.97916 818.1889 558.1114 354.35873 706.51605 931.79944 755.9009 794.61664 468.66507 945.5995 766.89154 391.75858 888.5588 758.0447 315.6554 767.63043#D|1|16|-8.301455 -16.596529 -15.523642 -11.407899 -27.24457 -5.4223847 -3.5314918 -14.993877 -17.576523 -47.544975 -15.049625 -2.2717526 -50.284016 -30.388834 -8.090313 -3.0160856|-0.81908786";
    //let sun_model_str = "";

    //let mut sun_model = Network::deserialize_unda_fmt_string(sun_model_str.into(), Activations::SIGMOID);
    let mut water_model = Network::deserialize_unda_fmt_string(water_model_str.into(), esp_idf_unda::network::activations::Activations::SIGMOID); 

    let mut days_since = 0f32;
    let mut plant_watered = false;

    const DELAY_TIME: u32 = 100;//60 * 60 * 1000;

    loop {
        //get water val
        let water_val = adc.read(&mut water_sensor)?;

        let dryness = water_val as f32 / 3500f32;
        let wetness = ((1f32 - dryness) / 0.60) - 0.25;

        //get light exposure

        let sunlight = adc.read(&mut light_sensor)?;
        let sunlight_percent = 1f32 - (sunlight as f32 / 3038f32);

        //println!("{:.2}", sunlight_percent);
        //println!("{:.2}", wetness);

        //Make watering inference
        let water_inf = water_model.predict(
            &vec![sunlight_percent, wetness, days_since])[0];
        if water_inf >= 0.9 {
            //Water plant
            plant_watered = true;
        } else {
            plant_watered = false;
        }

        //If we didn't do an operation, reset counter
        days_since = match plant_watered {
            true => 1f32 / 24f32,
            false => days_since + (1f32 / 24f32)
        };
        //Wait an hour
        FreeRtos::delay_ms(DELAY_TIME);
    }
}

